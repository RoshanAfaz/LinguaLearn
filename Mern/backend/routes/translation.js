const express = require('express');
const router = express.Router();
const translate = require('translate-google');

// Simple rate limiting to prevent too many requests
const requestCounts = new Map();
const RATE_LIMIT = 100; // requests per minute (increased)
const RATE_WINDOW = 60 * 1000; // 1 minute

const rateLimit = (req, res, next) => {
  const clientIP = req.ip || req.connection.remoteAddress || 'unknown';
  const now = Date.now();

  if (!requestCounts.has(clientIP)) {
    requestCounts.set(clientIP, { count: 1, resetTime: now + RATE_WINDOW });
    return next();
  }

  const clientData = requestCounts.get(clientIP);

  if (now > clientData.resetTime) {
    // Reset the count
    requestCounts.set(clientIP, { count: 1, resetTime: now + RATE_WINDOW });
    return next();
  }

  if (clientData.count >= RATE_LIMIT) {
    return res.status(429).json({
      success: false,
      message: 'Too many requests. Please wait a moment before trying again.',
      retryAfter: Math.ceil((clientData.resetTime - now) / 1000)
    });
  }

  clientData.count++;
  next();
};

// Advanced translation function for words not in dictionary
const tryAdvancedTranslation = async (text, from, to) => {
  try {
    // Simple pattern-based translations for common word types
    const patterns = {
      // Plurals
      's$': (word, targetLang) => {
        const singular = word.slice(0, -1);
        const singularTranslation = translationDictionary[singular]?.[targetLang];
        if (singularTranslation) {
          // Add simple plural rules
          const pluralRules = {
            'es': singularTranslation + 's',
            'fr': singularTranslation + 's',
            'de': singularTranslation + 'e',
            'it': singularTranslation + 'i',
            'pt': singularTranslation + 's'
          };
          return pluralRules[targetLang] || singularTranslation + 's';
        }
        return null;
      },

      // Past tense (-ed)
      'ed$': (word, targetLang) => {
        const base = word.slice(0, -2);
        const baseTranslation = translationDictionary[base]?.[targetLang];
        if (baseTranslation) {
          // Simple past tense rules
          const pastRules = {
            'es': baseTranslation + '├│',
            'fr': baseTranslation + '├й',
            'de': baseTranslation + 'te',
            'it': baseTranslation + '├▓',
            'pt': baseTranslation + 'ou'
          };
          return pastRules[targetLang] || baseTranslation + 'ed';
        }
        return null;
      }
    };

    const lowerText = text.toLowerCase();

    // Try pattern matching
    for (const [pattern, handler] of Object.entries(patterns)) {
      const regex = new RegExp(pattern);
      if (regex.test(lowerText)) {
        const result = handler(lowerText, to);
        if (result) return result;
      }
    }

    return null;
  } catch (error) {
    console.error('Advanced translation error:', error);
    return null;
  }
};

// Simple translation dictionary for common words
const translationDictionary = {
  // English to other languages
  'hello': {
    'es': 'hola', 'fr': 'bonjour', 'de': 'hallo', 'it': 'ciao', 'pt': 'ol├б',
    'ru': '╨┐╤А╨╕╨▓╨╡╤В', 'ja': 'уБУуВУуБлуБбуБп', 'ko': 'ьХИыЕХэХШьД╕ьЪФ', 'zh': 'ф╜ахе╜', 'ar': '┘Е╪▒╪н╪и╪з',
    'hi': 'рдирдорд╕реНрддреЗ', 'bn': 'рж╣рзНржпрж╛рж▓рзЛ', 'te': 'р░╣р░▓р▒Л', 'ta': 'ро╡рогроХрпНроХроорпН', 'gu': 'рк╣рлЗрк▓рлЛ',
    'kn': 'р▓╣р▓▓р│Л', 'ml': 'р┤╣р┤▓р╡Л', 'pa': 'ри╕рид ри╕рйНри░рйА риЕриХри╛ри▓', 'ur': '█Б█М┘Д┘И'
  },
  'goodbye': {
    'es': 'adi├│s', 'fr': 'au revoir', 'de': 'auf wiedersehen', 'it': 'ciao', 'pt': 'tchau',
    'ru': '╨┤╨╛ ╤Б╨▓╨╕╨┤╨░╨╜╨╕╤П', 'ja': 'уБХуВИуБЖуБкуВЙ', 'ko': 'ьХИыЕХэЮИ ъ░АьД╕ьЪФ', 'zh': 'хЖНшзБ', 'ar': '┘И╪п╪з╪╣╪з',
    'hi': 'рдЕрд▓рд╡рд┐рджрд╛', 'bn': 'ржмрж┐ржжрж╛ржпрж╝', 'te': 'р░╡р▒Ар░бр▒Нр░Хр▒Лр░▓р▒Б', 'ta': 'рокро┐ро░ро┐ропро╛ро╡ро┐роЯрпИ', 'gu': 'рк╡рк┐ркжрк╛ркп'
  },
  'thank you': {
    'es': 'gracias', 'fr': 'merci', 'de': 'danke', 'it': 'grazie', 'pt': 'obrigado',
    'ru': '╤Б╨┐╨░╤Б╨╕╨▒╨╛', 'ja': 'уБВуВКуБМуБиуБЖ', 'ko': 'ъ░РьВмэХйыЛИыЛд', 'zh': 'ш░вш░в', 'ar': '╪┤┘Г╪▒╪з',
    'hi': 'рдзрдиреНрдпрд╡рд╛рдж', 'bn': 'ржзржирзНржпржмрж╛ржж', 'te': 'р░зр░ир▒Нр░пр░╡р░╛р░жр░╛р░▓р▒Б', 'ta': 'роиройрпНро▒ро┐', 'gu': 'ркЖркнрк╛рк░'
  },
  'yes': {
    'es': 's├н', 'fr': 'oui', 'de': 'ja', 'it': 's├м', 'pt': 'sim',
    'ru': '╨┤╨░', 'ja': 'уБпуБД', 'ko': 'ыДд', 'zh': 'цШп', 'ar': '┘Ж╪╣┘Е',
    'hi': 'рд╣рд╛рдБ', 'bn': 'рж╣рзНржпрж╛ржБ', 'te': 'р░Ер░╡р▒Бр░ир▒Б', 'ta': 'роЖроорпН', 'gu': 'рк╣рк╛'
  },
  'no': {
    'es': 'no', 'fr': 'non', 'de': 'nein', 'it': 'no', 'pt': 'n├гo',
    'ru': '╨╜╨╡╤В', 'ja': 'уБДуБДуБИ', 'ko': 'ьХДыЛИьЪФ', 'zh': 'ф╕Н', 'ar': '┘Д╪з',
    'hi': 'рдирд╣реАрдВ', 'bn': 'ржирж╛', 'te': 'р░▓р▒Зр░жр▒Б', 'ta': 'роЗро▓рпНро▓рпИ', 'gu': 'ркирк╛'
  },
  'please': {
    'es': 'por favor', 'fr': 's\'il vous pla├оt', 'de': 'bitte', 'it': 'per favore', 'pt': 'por favor',
    'ru': '╨┐╨╛╨╢╨░╨╗╤Г╨╣╤Б╤В╨░', 'ja': 'уБКщбШуБДуБЧуБ╛уБЩ', 'ko': 'ьаЬы░Ь', 'zh': 'шп╖', 'ar': '┘Е┘Ж ┘Б╪╢┘Д┘Г',
    'hi': 'рдХреГрдкрдпрд╛', 'bn': 'ржжржпрж╝рж╛ ржХрж░рзЗ', 'te': 'р░жр░пр░Ър▒Зр░╕р░┐', 'ta': 'родропро╡рпБроЪрпЖропрпНродрпБ', 'gu': 'ркХрлГрккрк╛ ркХрк░рлАркирлЗ'
  },
  'water': {
    'es': 'agua', 'fr': 'eau', 'de': 'wasser', 'it': 'acqua', 'pt': '├бgua',
    'ru': '╨▓╨╛╨┤╨░', 'ja': 'ц░┤', 'ko': 'ым╝', 'zh': 'ц░┤', 'ar': '┘Е╪з╪б',
    'hi': 'рдкрд╛рдиреА', 'bn': 'ржкрж╛ржирж┐', 'te': 'р░ир▒Ар░░р▒Б', 'ta': 'родрогрпНрогрпАро░рпН', 'gu': 'рккрк╛ркгрлА'
  },
  'food': {
    'es': 'comida', 'fr': 'nourriture', 'de': 'essen', 'it': 'cibo', 'pt': 'comida',
    'ru': '╨╡╨┤╨░', 'ja': 'щгЯуБ╣чЙй', 'ko': 'ьЭМьЛЭ', 'zh': 'щгЯчЙй', 'ar': '╪╖╪╣╪з┘Е',
    'hi': 'рднреЛрдЬрди', 'bn': 'ржЦрж╛ржмрж╛рж░', 'te': 'р░Жр░╣р░╛р░░р░В', 'ta': 'роЙрогро╡рпБ', 'gu': 'ркЦрлЛрк░рк╛ркХ'
  },
  'love': {
    'es': 'amor', 'fr': 'amour', 'de': 'liebe', 'it': 'amore', 'pt': 'amor',
    'ru': '╨╗╤О╨▒╨╛╨▓╤М', 'ja': 'цДЫ', 'ko': 'ьВмыЮС', 'zh': 'чИ▒', 'ar': '╪н╪и',
    'hi': 'рдкреНрд░реЗрдо', 'bn': 'ржнрж╛рж▓рзЛржмрж╛рж╕рж╛', 'te': 'р░кр▒Нр░░р▒Зр░о', 'ta': 'роХро╛родро▓рпН', 'gu': 'рккрлНрк░рлЗрко'
  },
  'friend': {
    'es': 'amigo', 'fr': 'ami', 'de': 'freund', 'it': 'amico', 'pt': 'amigo',
    'ru': '╨┤╤А╤Г╨│', 'ja': 'хПЛщБФ', 'ko': 'ь╣Ьъ╡м', 'zh': 'цЬЛхПЛ', 'ar': '╪╡╪п┘К┘В',
    'hi': 'рдорд┐рддреНрд░', 'bn': 'ржмржирзНржзрзБ', 'te': 'р░╕р▒Нр░ир▒Зр░╣р░┐р░др▒Бр░бр▒Б', 'ta': 'роирогрпНрокройрпН', 'gu': 'ркорк┐ркдрлНрк░'
  },
  'family': {
    'es': 'familia', 'fr': 'famille', 'de': 'familie', 'it': 'famiglia', 'pt': 'fam├нlia',
    'ru': '╤Б╨╡╨╝╤М╤П', 'ja': 'хо╢цЧП', 'ko': 'ъ░Аьб▒', 'zh': 'хо╢х║н', 'ar': '╪╣╪з╪ж┘Д╪й',
    'hi': 'рдкрд░рд┐рд╡рд╛рд░', 'bn': 'ржкрж░рж┐ржмрж╛рж░', 'te': 'р░Хр▒Бр░Яр▒Бр░Вр░мр░В', 'ta': 'роХрпБроЯрпБроорпНрокроорпН', 'gu': 'ркХрлБркЯрлБркВркм'
  },
  'house': {
    'es': 'casa', 'fr': 'maison', 'de': 'haus', 'it': 'casa', 'pt': 'casa',
    'ru': '╨┤╨╛╨╝', 'ja': 'хо╢', 'ko': 'ьзС', 'zh': 'цИ┐хнР', 'ar': '┘Е┘Ж╪▓┘Д',
    'hi': 'рдШрд░', 'bn': 'ржШрж░', 'te': 'р░Зр░▓р▒Нр░▓р▒Б', 'ta': 'ро╡рпАроЯрпБ', 'gu': 'ркШрк░'
  },
  'school': {
    'es': 'escuela', 'fr': '├йcole', 'de': 'schule', 'it': 'scuola', 'pt': 'escola',
    'ru': '╤И╨║╨╛╨╗╨░', 'ja': 'хнжцаб', 'ko': 'эХЩъ╡Р', 'zh': 'хнжцаб', 'ar': '┘Е╪п╪▒╪│╪й',
    'hi': 'рд╕реНрдХреВрд▓', 'bn': 'рж╕рзНржХрзБрж▓', 'te': 'р░кр░╛р░ар░╢р░╛р░▓', 'ta': 'рокро│рпНро│ро┐', 'gu': 'рк╢рк╛рк│рк╛'
  },
  'book': {
    'es': 'libro', 'fr': 'livre', 'de': 'buch', 'it': 'libro', 'pt': 'livro',
    'ru': '╨║╨╜╨╕╨│╨░', 'ja': 'цЬм', 'ko': 'ь▒Е', 'zh': 'ф╣ж', 'ar': '┘Г╪к╪з╪и',
    'hi': 'рдХрд┐рддрд╛рдм', 'bn': 'ржмржЗ', 'te': 'р░кр▒Бр░╕р▒Нр░др░Хр░В', 'ta': 'рокрпБродрпНродроХроорпН', 'gu': 'рккрлБрк╕рлНркдркХ'
  },
  'time': {
    'es': 'tiempo', 'fr': 'temps', 'de': 'zeit', 'it': 'tempo', 'pt': 'tempo',
    'ru': '╨▓╤А╨╡╨╝╤П', 'ja': 'цЩВщЦУ', 'ko': 'ьЛЬъ░Д', 'zh': 'цЧ╢щЧ┤', 'ar': '┘И┘В╪к',
    'hi': 'рд╕рдордп', 'bn': 'рж╕ржоржпрж╝', 'te': 'р░╕р░ор░пр░В', 'ta': 'роирпЗро░роорпН', 'gu': 'рк╕ркоркп'
  },
  'money': {
    'es': 'dinero', 'fr': 'argent', 'de': 'geld', 'it': 'soldi', 'pt': 'dinheiro',
    'ru': '╨┤╨╡╨╜╤М╨│╨╕', 'ja': 'уБКщЗС', 'ko': 'ыПИ', 'zh': 'щТ▒', 'ar': '┘Е╪з┘Д',
    'hi': 'рдкреИрд╕рд╛', 'bn': 'ржЯрж╛ржХрж╛', 'te': 'р░бр░мр▒Нр░мр▒Б', 'ta': 'рокрогроорпН', 'gu': 'рккрлИрк╕рк╛'
  },
  // UNIVERSE OF WORDS EXPANSION! ЁЯММ
  'word': {
    'es': 'palabra', 'fr': 'mot', 'de': 'wort', 'it': 'parola', 'pt': 'palavra',
    'ru': '╤Б╨╗╨╛╨▓╨╛', 'ja': 'шиАшСЙ', 'ko': 'ыЛиьЦ┤', 'zh': 'шпН', 'ar': '┘Г┘Д┘Е╪й',
    'hi': 'рд╢рдмреНрдж', 'bn': 'рж╢ржмрзНржж', 'te': 'р░кр░жр░В', 'ta': 'ро╡ро╛ро░рпНродрпНродрпИ', 'gu': 'рк╢ркмрлНркж'
  },
  'language': {
    'es': 'idioma', 'fr': 'langue', 'de': 'sprache', 'it': 'lingua', 'pt': 'idioma',
    'ru': '╤П╨╖╤Л╨║', 'ja': 'шиАшкЮ', 'ko': 'ьЦ╕ьЦ┤', 'zh': 'шпншиА', 'ar': '┘Д╪║╪й',
    'hi': 'рднрд╛рд╖рд╛', 'bn': 'ржнрж╛рж╖рж╛', 'te': 'р░нр░╛р░╖', 'ta': 'роорпКро┤ро┐', 'gu': 'ркнрк╛рк╖рк╛'
  },
  'translate': {
    'es': 'traducir', 'fr': 'traduire', 'de': '├╝bersetzen', 'it': 'tradurre', 'pt': 'traduzir',
    'ru': '╨┐╨╡╤А╨╡╨▓╨╛╨┤╨╕╤В╤М', 'ja': 'ч┐╗ши│уБЩуВЛ', 'ko': 'ы▓ИьЧнэХШыЛд', 'zh': 'ч┐╗шпС', 'ar': '╪к╪▒╪м┘Е',
    'hi': 'рдЕрдиреБрд╡рд╛рдж рдХрд░рдирд╛', 'bn': 'ржЕржирзБржмрж╛ржж ржХрж░рж╛', 'te': 'р░Ер░ир▒Бр░╡р░жр░┐р░Вр░Ър▒Б', 'ta': 'роорпКро┤ро┐рокрпЖропро░рпН', 'gu': 'ркЕркирлБрк╡рк╛ркж ркХрк░рлЛ'
  },
  'learn': {
    'es': 'aprender', 'fr': 'apprendre', 'de': 'lernen', 'it': 'imparare', 'pt': 'aprender',
    'ru': '╤Г╤З╨╕╤В╤М╤Б╤П', 'ja': 'хнжуБ╢', 'ko': 'ы░░ьЪ░ыЛд', 'zh': 'хнжф╣а', 'ar': '╪к╪╣┘Д┘Е',
    'hi': 'рд╕реАрдЦрдирд╛', 'bn': 'рж╢рзЗржЦрж╛', 'te': 'р░ир▒Зр░░р▒Нр░Ър▒Бр░Хр▒Л', 'ta': 'роХро▒рпНро▒рпБ', 'gu': 'рк╢рлАркЦрлЛ'
  },
  'study': {
    'es': 'estudiar', 'fr': '├йtudier', 'de': 'studieren', 'it': 'studiare', 'pt': 'estudar',
    'ru': '╨╕╨╖╤Г╤З╨░╤В╤М', 'ja': 'хЛЙх╝╖уБЩуВЛ', 'ko': 'ъ│╡ы╢АэХШыЛд', 'zh': 'хнжф╣а', 'ar': '╪п╪▒╪з╪│╪й',
    'hi': 'рдЕрдзреНрдпрдпрди', 'bn': 'ржЕржзрзНржпржпрж╝ржи', 'te': 'р░Ер░зр▒Нр░пр░пр░ир░В', 'ta': 'рокроЯро┐рокрпНрокрпБ', 'gu': 'ркЕркнрлНркпрк╛рк╕'
  },
  'teacher': {
    'es': 'maestro', 'fr': 'professeur', 'de': 'lehrer', 'it': 'insegnante', 'pt': 'professor',
    'ru': '╤Г╤З╨╕╤В╨╡╨╗╤М', 'ja': 'хЕИчФЯ', 'ko': 'ьДаьГЭыЛШ', 'zh': 'шАБх╕И', 'ar': '┘Е╪╣┘Д┘Е',
    'hi': 'рд╢рд┐рдХреНрд╖рдХ', 'bn': 'рж╢рж┐ржХрзНрж╖ржХ', 'te': 'р░Йр░кр░╛р░зр▒Нр░пр░╛р░пр▒Бр░бр▒Б', 'ta': 'роЖроЪро┐ро░ро┐ропро░рпН', 'gu': 'рк╢рк┐ркХрлНрк╖ркХ'
  },
  'student': {
    'es': 'estudiante', 'fr': '├йtudiant', 'de': 'student', 'it': 'studente', 'pt': 'estudante',
    'ru': '╤Б╤В╤Г╨┤╨╡╨╜╤В', 'ja': 'хнжчФЯ', 'ko': 'эХЩьГЭ', 'zh': 'хнжчФЯ', 'ar': '╪╖╪з┘Д╪и',
    'hi': 'рдЫрд╛рддреНрд░', 'bn': 'ржЫрж╛рждрзНрж░', 'te': 'р░╡р░┐р░жр▒Нр░пр░╛р░░р▒Нр░ер░┐', 'ta': 'рооро╛рогро╡ро░рпН', 'gu': 'рк╡рк┐ркжрлНркпрк╛рк░рлНркерлА'
  },
  'computer': {
    'es': 'computadora', 'fr': 'ordinateur', 'de': 'computer', 'it': 'computer', 'pt': 'computador',
    'ru': '╨║╨╛╨╝╨┐╤М╤О╤В╨╡╤А', 'ja': 'уВ│уГ│уГФуГеуГ╝уВ┐уГ╝', 'ko': 'ь╗┤эУиэД░', 'zh': 'чФ╡шДС', 'ar': '╪н╪з╪│┘И╪и',
    'hi': 'рдХрдВрдкреНрдпреВрдЯрд░', 'bn': 'ржХржорзНржкрж┐ржЙржЯрж╛рж░', 'te': 'р░Хр░Вр░кр▒Нр░пр▒Вр░Яр░░р▒Н', 'ta': 'роХрогро┐ройро┐', 'gu': 'ркХркорлНрккрлНркпрлБркЯрк░'
  },
  'internet': {
    'es': 'internet', 'fr': 'internet', 'de': 'internet', 'it': 'internet', 'pt': 'internet',
    'ru': '╨╕╨╜╤В╨╡╤А╨╜╨╡╤В', 'ja': 'уВдуГ│уВ┐уГ╝уГНуГГуГИ', 'ko': 'ьЭ╕эД░ыД╖', 'zh': 'ф║ТшБФч╜С', 'ar': '╪е┘Ж╪к╪▒┘Ж╪к',
    'hi': 'рдЗрдВрдЯрд░рдиреЗрдЯ', 'bn': 'ржЗржирзНржЯрж╛рж░ржирзЗржЯ', 'te': 'р░Зр░Вр░Яр░░р▒Нр░ир▒Жр░Яр▒Н', 'ta': 'роЗрогрпИропроорпН', 'gu': 'ркЗркирлНркЯрк░ркирлЗркЯ'
  },
  'phone': {
    'es': 'tel├йfono', 'fr': 't├йl├йphone', 'de': 'telefon', 'it': 'telefono', 'pt': 'telefone',
    'ru': '╤В╨╡╨╗╨╡╤Д╨╛╨╜', 'ja': 'щЫ╗шй▒', 'ko': 'ьаДэЩФ', 'zh': 'чФ╡шпЭ', 'ar': '┘З╪з╪к┘Б',
    'hi': 'рдлреЛрди', 'bn': 'ржлрзЛржи', 'te': 'р░лр▒Лр░ир▒Н', 'ta': 'родрпКро▓рпИрокрпЗроЪро┐', 'gu': 'рклрлЛрки'
  },
  'car': {
    'es': 'coche', 'fr': 'voiture', 'de': 'auto', 'it': 'macchina', 'pt': 'carro',
    'ru': '╨╝╨░╤И╨╕╨╜╨░', 'ja': 'ш╗К', 'ko': 'ь░и', 'zh': 'ц▒╜ш╜ж', 'ar': '╪│┘К╪з╪▒╪й',
    'hi': 'рдХрд╛рд░', 'bn': 'ржЧрж╛ржбрж╝рж┐', 'te': 'р░Хр░╛р░░р▒Б', 'ta': 'роХро╛ро░рпН', 'gu': 'ркХрк╛рк░'
  },
  'train': {
    'es': 'tren', 'fr': 'train', 'de': 'zug', 'it': 'treno', 'pt': 'trem',
    'ru': '╨┐╨╛╨╡╨╖╨┤', 'ja': 'щЫ╗ш╗К', 'ko': 'ъ╕░ь░и', 'zh': 'чБлш╜ж', 'ar': '┘В╪╖╪з╪▒',
    'hi': 'рдЯреНрд░реЗрди', 'bn': 'ржЯрзНрж░рзЗржи', 'te': 'р░░р▒Ир░▓р▒Б', 'ta': 'ро░ропро┐ро▓рпН', 'gu': 'ркЯрлНрк░рлЗрки'
  },
  'airplane': {
    'es': 'avi├│n', 'fr': 'avion', 'de': 'flugzeug', 'it': 'aereo', 'pt': 'avi├гo',
    'ru': '╤Б╨░╨╝╨╛╨╗╨╡╤В', 'ja': 'щгЫшбМцйЯ', 'ko': 'ы╣ДэЦЙъ╕░', 'zh': 'щгЮцЬ║', 'ar': '╪╖╪з╪ж╪▒╪й',
    'hi': 'рд╣рд╡рд╛рдИ рдЬрд╣рд╛рдЬ', 'bn': 'ржмрж┐ржорж╛ржи', 'te': 'р░╡р░┐р░ор░╛р░ир░В', 'ta': 'ро╡ро┐рооро╛ройроорпН', 'gu': 'рк╡рк┐ркорк╛рки'
  },
  'city': {
    'es': 'ciudad', 'fr': 'ville', 'de': 'stadt', 'it': 'citt├а', 'pt': 'cidade',
    'ru': '╨│╨╛╤А╨╛╨┤', 'ja': 'щГ╜х╕В', 'ko': 'ыПДьЛЬ', 'zh': 'хЯОх╕В', 'ar': '┘Е╪п┘К┘Ж╪й',
    'hi': 'рд╢рд╣рд░', 'bn': 'рж╢рж╣рж░', 'te': 'р░ир░Чр░░р░В', 'ta': 'роироХро░роорпН', 'gu': 'рк╢рк╣рлЗрк░'
  },
  'country': {
    'es': 'pa├нs', 'fr': 'pays', 'de': 'land', 'it': 'paese', 'pt': 'pa├нs',
    'ru': '╤Б╤В╤А╨░╨╜╨░', 'ja': 'хЫ╜', 'ko': 'ыВШыЭ╝', 'zh': 'хЫ╜хо╢', 'ar': '╪и┘Д╪п',
    'hi': 'рджреЗрд╢', 'bn': 'ржжрзЗрж╢', 'te': 'р░жр▒Зр░╢р░В', 'ta': 'роиро╛роЯрпБ', 'gu': 'ркжрлЗрк╢'
  },
  'world': {
    'es': 'mundo', 'fr': 'monde', 'de': 'welt', 'it': 'mondo', 'pt': 'mundo',
    'ru': '╨╝╨╕╤А', 'ja': 'ф╕ЦчХМ', 'ko': 'ьД╕ъ│Д', 'zh': 'ф╕ЦчХМ', 'ar': '╪╣╪з┘Д┘Е',
    'hi': 'рджреБрдирд┐рдпрд╛', 'bn': 'ржмрж┐рж╢рзНржм', 'te': 'р░кр▒Нр░░р░кр░Вр░Ър░В', 'ta': 'роЙро▓роХроорпН', 'gu': 'рк╡рк┐рк╢рлНрк╡'
  },
  'universe': {
    'es': 'universo', 'fr': 'univers', 'de': 'universum', 'it': 'universo', 'pt': 'universo',
    'ru': '╨▓╤Б╨╡╨╗╨╡╨╜╨╜╨░╤П', 'ja': 'хоЗхоЩ', 'ko': 'ьЪ░ьг╝', 'zh': 'хоЗхоЩ', 'ar': '┘Г┘И┘Ж',
    'hi': 'рдмреНрд░рд╣реНрдорд╛рдВрдб', 'bn': 'ржорж╣рж╛ржмрж┐рж╢рзНржм', 'te': 'р░╡р░┐р░╢р▒Нр░╡р░В', 'ta': 'рокро┐ро░рокроЮрпНроЪроорпН', 'gu': 'ркмрлНрк░рк╣рлНркорк╛ркВркб'
  },
  // COLORS ЁЯМИ
  'red': {
    'es': 'rojo', 'fr': 'rouge', 'de': 'rot', 'it': 'rosso', 'pt': 'vermelho',
    'ru': '╨║╤А╨░╤Б╨╜╤Л╨╣', 'ja': 'ш╡д', 'ko': 'ы╣иъ░ДьГЙ', 'zh': 'ч║вшЙ▓', 'ar': '╪г╪н┘Е╪▒',
    'hi': 'рд▓рд╛рд▓', 'bn': 'рж▓рж╛рж▓', 'te': 'р░Ор░░р▒Бр░кр▒Б', 'ta': 'роЪро┐ро╡рокрпНрокрпБ', 'gu': 'рк▓рк╛рк▓'
  },
  'blue': {
    'es': 'azul', 'fr': 'bleu', 'de': 'blau', 'it': 'blu', 'pt': 'azul',
    'ru': '╤Б╨╕╨╜╨╕╨╣', 'ja': 'щЭТ', 'ko': 'эММыЮАьГЙ', 'zh': 'шУЭшЙ▓', 'ar': '╪г╪▓╪▒┘В',
    'hi': 'рдиреАрд▓рд╛', 'bn': 'ржирзАрж▓', 'te': 'р░ир▒Ар░▓р░В', 'ta': 'роирпАро▓роорпН', 'gu': 'рк╡рк╛ркжрк│рлА'
  },
  'green': {
    'es': 'verde', 'fr': 'vert', 'de': 'gr├╝n', 'it': 'verde', 'pt': 'verde',
    'ru': '╨╖╨╡╨╗╨╡╨╜╤Л╨╣', 'ja': 'ч╖С', 'ko': 'ь┤ИыбЭьГЙ', 'zh': 'ч╗┐шЙ▓', 'ar': '╪г╪о╪╢╪▒',
    'hi': 'рд╣рд░рд╛', 'bn': 'рж╕ржмрзБржЬ', 'te': 'р░Жр░Хр▒Бр░кр░Ър▒Нр░Ъ', 'ta': 'рокроЪрпНроЪрпИ', 'gu': 'рк▓рлАрк▓рлЛ'
  },
  'yellow': {
    'es': 'amarillo', 'fr': 'jaune', 'de': 'gelb', 'it': 'giallo', 'pt': 'amarelo',
    'ru': '╨╢╨╡╨╗╤В╤Л╨╣', 'ja': 'щ╗ДшЙ▓', 'ko': 'ыЕ╕ыЮАьГЙ', 'zh': 'щ╗ДшЙ▓', 'ar': '╪г╪╡┘Б╪▒',
    'hi': 'рдкреАрд▓рд╛', 'bn': 'рж╣рж▓рзБржж', 'te': 'р░кр░╕р▒Бр░кр▒Б', 'ta': 'роороЮрпНроЪро│рпН', 'gu': 'рккрлАрк│рлЛ'
  },
  'black': {
    'es': 'negro', 'fr': 'noir', 'de': 'schwarz', 'it': 'nero', 'pt': 'preto',
    'ru': '╤З╨╡╤А╨╜╤Л╨╣', 'ja': 'щ╗Т', 'ko': 'ъ▓АьЭАьГЙ', 'zh': 'щ╗СшЙ▓', 'ar': '╪г╪│┘И╪п',
    'hi': 'рдХрд╛рд▓рд╛', 'bn': 'ржХрж╛рж▓рзЛ', 'te': 'р░ир░▓р▒Бр░кр▒Б', 'ta': 'роХро░рпБрокрпНрокрпБ', 'gu': 'ркХрк╛рк│рлЛ'
  },
  'white': {
    'es': 'blanco', 'fr': 'blanc', 'de': 'wei├Я', 'it': 'bianco', 'pt': 'branco',
    'ru': '╨▒╨╡╨╗╤Л╨╣', 'ja': 'чЩ╜', 'ko': 'эЭ░ьГЙ', 'zh': 'чЩ╜шЙ▓', 'ar': '╪г╪и┘К╪╢',
    'hi': 'рд╕рдлреЗрдж', 'bn': 'рж╕рж╛ржжрж╛', 'te': 'р░др▒Жр░▓р▒Бр░кр▒Б', 'ta': 'ро╡рпЖро│рпНро│рпИ', 'gu': 'рк╕рклрлЗркж'
  },
  // NUMBERS ЁЯФв
  'one': {
    'es': 'uno', 'fr': 'un', 'de': 'eins', 'it': 'uno', 'pt': 'um',
    'ru': '╨╛╨┤╨╕╨╜', 'ja': 'ф╕А', 'ko': 'эХШыВШ', 'zh': 'ф╕А', 'ar': '┘И╪з╪н╪п',
    'hi': 'рдПрдХ', 'bn': 'ржПржХ', 'te': 'р░Тр░Хр░Яр░┐', 'ta': 'роТройрпНро▒рпБ', 'gu': 'ркПркХ'
  },
  'two': {
    'es': 'dos', 'fr': 'deux', 'de': 'zwei', 'it': 'due', 'pt': 'dois',
    'ru': '╨┤╨▓╨░', 'ja': 'ф║М', 'ko': 'ыСШ', 'zh': 'ф║М', 'ar': '╪з╪л┘Ж╪з┘Ж',
    'hi': 'рджреЛ', 'bn': 'ржжрзБржЗ', 'te': 'р░░р▒Жр░Вр░бр▒Б', 'ta': 'роЗро░рогрпНроЯрпБ', 'gu': 'ркмрлЗ'
  },
  'three': {
    'es': 'tres', 'fr': 'trois', 'de': 'drei', 'it': 'tre', 'pt': 'tr├кs',
    'ru': '╤В╤А╨╕', 'ja': 'ф╕Й', 'ko': 'ьЕЛ', 'zh': 'ф╕Й', 'ar': '╪л┘Д╪з╪л╪й',
    'hi': 'рддреАрди', 'bn': 'рждрж┐ржи', 'te': 'р░ор▒Вр░бр▒Б', 'ta': 'роорпВройрпНро▒рпБ', 'gu': 'ркдрлНрк░ркг'
  },
  // BODY PARTS ЁЯСд
  'head': {
    'es': 'cabeza', 'fr': 't├кte', 'de': 'kopf', 'it': 'testa', 'pt': 'cabe├зa',
    'ru': '╨│╨╛╨╗╨╛╨▓╨░', 'ja': 'щан', 'ko': 'ыи╕ыжм', 'zh': 'хд┤', 'ar': '╪▒╪г╪│',
    'hi': 'рд╕рд┐рд░', 'bn': 'ржорж╛ржерж╛', 'te': 'р░др░▓', 'ta': 'родро▓рпИ', 'gu': 'ркорк╛ркерлБркВ'
  },
  'eye': {
    'es': 'ojo', 'fr': '┼Уil', 'de': 'auge', 'it': 'occhio', 'pt': 'olho',
    'ru': '╨│╨╗╨░╨╖', 'ja': 'чЫо', 'ko': 'ыИИ', 'zh': 'чЬ╝чЭЫ', 'ar': '╪╣┘К┘Ж',
    'hi': 'рдЖрдВрдЦ', 'bn': 'ржЪрзЛржЦ', 'te': 'р░Хр░ир▒Нр░ир▒Б', 'ta': 'роХрогрпН', 'gu': 'ркЖркВркЦ'
  },
  'hand': {
    'es': 'mano', 'fr': 'main', 'de': 'hand', 'it': 'mano', 'pt': 'm├гo',
    'ru': '╤А╤Г╨║╨░', 'ja': 'цЙЛ', 'ko': 'ьЖР', 'zh': 'цЙЛ', 'ar': '┘К╪п',
    'hi': 'рд╣рд╛рде', 'bn': 'рж╣рж╛ржд', 'te': 'р░Ър▒Зр░пр░┐', 'ta': 'роХрпИ', 'gu': 'рк╣рк╛рке'
  },
  // EMOTIONS ЁЯШК
  'happy': {
    'es': 'feliz', 'fr': 'heureux', 'de': 'gl├╝cklich', 'it': 'felice', 'pt': 'feliz',
    'ru': '╤Б╤З╨░╤Б╤В╨╗╨╕╨▓╤Л╨╣', 'ja': 'х╣╕уБЫ', 'ko': 'эЦЙы│╡эХЬ', 'zh': 'х┐лф╣Р', 'ar': '╪│╪╣┘К╪п',
    'hi': 'рдЦреБрд╢', 'bn': 'ржЦрзБрж╢рж┐', 'te': 'р░╕р░Вр░др▒Лр░╖р░В', 'ta': 'роороХро┐ро┤рпНроЪрпНроЪро┐', 'gu': 'ркЦрлБрк╢'
  },
  'sad': {
    'es': 'triste', 'fr': 'triste', 'de': 'traurig', 'it': 'triste', 'pt': 'triste',
    'ru': '╨│╤А╤Г╤Б╤В╨╜╤Л╨╣', 'ja': 'цВ▓уБЧуБД', 'ko': 'ьКмэФИ', 'zh': 'цВ▓ф╝д', 'ar': '╪н╪▓┘К┘Ж',
    'hi': 'рдЙрджрд╛рд╕', 'bn': 'ржжрзБржГржЦрж┐ржд', 'te': 'р░жр▒Бр░Гр░Цр░В', 'ta': 'роЪрпЛроХроорпН', 'gu': 'ркжрлБркГркЦрлА'
  },
  'angry': {
    'es': 'enojado', 'fr': 'en col├иre', 'de': 'w├╝tend', 'it': 'arrabbiato', 'pt': 'zangado',
    'ru': '╨╖╨╗╨╛╨╣', 'ja': 'цАТуБгуБжуБДуВЛ', 'ko': 'эЩФыВЬ', 'zh': 'чФЯц░Ф', 'ar': '╪║╪з╪╢╪и',
    'hi': 'рдЧреБрд╕реНрд╕рд╛', 'bn': 'рж░рж╛ржЧрж╛ржирзНржмрж┐ржд', 'te': 'р░Хр▒Лр░кр░В', 'ta': 'роХрпЛрокроорпН', 'gu': 'ркЧрлБрк╕рлНрк╕рлЗ'
  },
  // ANIMALS ЁЯР╛
  'cat': {
    'es': 'gato', 'fr': 'chat', 'de': 'katze', 'it': 'gatto', 'pt': 'gato',
    'ru': '╨║╨╛╤В', 'ja': 'чМл', 'ko': 'ъ│аьЦСьЭ┤', 'zh': 'чМл', 'ar': '┘В╪╖╪й',
    'hi': 'рдмрд┐рд▓реНрд▓реА', 'bn': 'ржмрж┐ржбрж╝рж╛рж▓', 'te': 'р░кр░┐р░▓р▒Нр░▓р░┐', 'ta': 'рокрпВройрпИ', 'gu': 'ркмрк┐рк▓рк╛ркбрлА'
  },
  'dog': {
    'es': 'perro', 'fr': 'chien', 'de': 'hund', 'it': 'cane', 'pt': 'cachorro',
    'ru': '╤Б╨╛╨▒╨░╨║╨░', 'ja': 'чКм', 'ko': 'ъ░Ь', 'zh': 'чЛЧ', 'ar': '┘Г┘Д╪и',
    'hi': 'рдХреБрддреНрддрд╛', 'bn': 'ржХрзБржХрзБрж░', 'te': 'р░Хр▒Бр░Хр▒Нр░Х', 'ta': 'роиро╛ропрпН', 'gu': 'ркХрлВркдрк░рлЛ'
  },
  'bird': {
    'es': 'p├бjaro', 'fr': 'oiseau', 'de': 'vogel', 'it': 'uccello', 'pt': 'p├бssaro',
    'ru': '╨┐╤В╨╕╤Ж╨░', 'ja': 'щ│е', 'ko': 'ьГИ', 'zh': 'щ╕Я', 'ar': '╪╖╪з╪ж╪▒',
    'hi': 'рдкрдХреНрд╖реА', 'bn': 'ржкрж╛ржЦрж┐', 'te': 'р░кр░Хр▒Нр░╖р░┐', 'ta': 'рокро▒ро╡рпИ', 'gu': 'рккркХрлНрк╖рлА'
  },
  'fish': {
    'es': 'pez', 'fr': 'poisson', 'de': 'fisch', 'it': 'pesce', 'pt': 'peixe',
    'ru': '╤А╤Л╨▒╨░', 'ja': 'щнЪ', 'ko': 'ым╝ъ│аъ╕░', 'zh': 'щ▒╝', 'ar': '╪│┘Е┘Г',
    'hi': 'рдордЫрд▓реА', 'bn': 'ржорж╛ржЫ', 'te': 'р░Ър▒Зр░к', 'ta': 'роорпАройрпН', 'gu': 'ркорк╛ркЫрк▓рлА'
  },
  'horse': {
    'es': 'caballo', 'fr': 'cheval', 'de': 'pferd', 'it': 'cavallo', 'pt': 'cavalo',
    'ru': '╨╗╨╛╤И╨░╨┤╤М', 'ja': 'щжм', 'ko': 'ызР', 'zh': 'щйм', 'ar': '╪н╪╡╪з┘Ж',
    'hi': 'рдШреЛрдбрд╝рд╛', 'bn': 'ржШрзЛржбрж╝рж╛', 'te': 'р░Чр▒Бр░░р▒Нр░░р░В', 'ta': 'роХрпБродро┐ро░рпИ', 'gu': 'ркШрлЛркбрлЛ'
  },
  'elephant': {
    'es': 'elefante', 'fr': '├йl├йphant', 'de': 'elefant', 'it': 'elefante', 'pt': 'elefante',
    'ru': '╤Б╨╗╨╛╨╜', 'ja': 'ш▒б', 'ko': 'ь╜ФыБ╝ыжм', 'zh': 'хдзш▒б', 'ar': '┘Б┘К┘Д',
    'hi': 'рд╣рд╛рдереА', 'bn': 'рж╣рж╛рждрж┐', 'te': 'р░Пр░ир▒Бр░Чр▒Б', 'ta': 'ропро╛ройрпИ', 'gu': 'рк╣рк╛ркерлА'
  },
  'lion': {
    'es': 'le├│n', 'fr': 'lion', 'de': 'l├╢we', 'it': 'leone', 'pt': 'le├гo',
    'ru': '╨╗╨╡╨▓', 'ja': 'уГйуВдуВкуГ│', 'ko': 'ьВмьЮР', 'zh': 'чЛохнР', 'ar': '╪г╪│╪п',
    'hi': 'рд╢реЗрд░', 'bn': 'рж╕рж┐ржВрж╣', 'te': 'р░╕р░┐р░Вр░╣р░В', 'ta': 'роЪро┐роЩрпНроХроорпН', 'gu': 'рк╕рк┐ркВрк╣'
  },
  // FOOD & DRINKS ЁЯНХ
  'bread': {
    'es': 'pan', 'fr': 'pain', 'de': 'brot', 'it': 'pane', 'pt': 'p├гo',
    'ru': '╤Е╨╗╨╡╨▒', 'ja': 'уГСуГ│', 'ko': 'ы╣╡', 'zh': 'щЭвхМЕ', 'ar': '╪о╪и╪▓',
    'hi': 'рд░реЛрдЯреА', 'bn': 'рж░рзБржЯрж┐', 'te': 'р░░р▒Кр░Яр▒Нр░Яр▒Ж', 'ta': 'ро░рпКроЯрпНроЯро┐', 'gu': 'рк░рлЛркЯрк▓рлА'
  },
  'rice': {
    'es': 'arroz', 'fr': 'riz', 'de': 'reis', 'it': 'riso', 'pt': 'arroz',
    'ru': '╤А╨╕╤Б', 'ja': 'ч▒│', 'ko': 'ьМА', 'zh': 'ч▒│щен', 'ar': '╪г╪▒╪▓',
    'hi': 'рдЪрд╛рд╡рд▓', 'bn': 'ржнрж╛ржд', 'te': 'р░Ер░ир▒Нр░ир░В', 'ta': 'роЕро░ро┐роЪро┐', 'gu': 'ркЪрлЛркЦрк╛'
  },
  'milk': {
    'es': 'leche', 'fr': 'lait', 'de': 'milch', 'it': 'latte', 'pt': 'leite',
    'ru': '╨╝╨╛╨╗╨╛╨║╨╛', 'ja': 'чЙЫф╣│', 'ko': 'ьЪ░ьЬа', 'zh': 'чЙЫхе╢', 'ar': '╪н┘Д┘К╪и',
    'hi': 'рджреВрдз', 'bn': 'ржжрзБржз', 'te': 'р░кр░╛р░▓р▒Б', 'ta': 'рокро╛ро▓рпН', 'gu': 'ркжрлВркз'
  },
  'coffee': {
    'es': 'caf├й', 'fr': 'caf├й', 'de': 'kaffee', 'it': 'caff├и', 'pt': 'caf├й',
    'ru': '╨║╨╛╤Д╨╡', 'ja': 'уВ│уГ╝уГТуГ╝', 'ko': 'ь╗дэФ╝', 'zh': 'хТЦхХб', 'ar': '┘В┘З┘И╪й',
    'hi': 'рдХреЙрдлреА', 'bn': 'ржХржлрж┐', 'te': 'р░Хр░╛р░лр▒А', 'ta': 'роХро╛рокро┐', 'gu': 'ркХрлЛрклрлА'
  },
  'tea': {
    'es': 't├й', 'fr': 'th├й', 'de': 'tee', 'it': 't├и', 'pt': 'ch├б',
    'ru': '╤З╨░╨╣', 'ja': 'шМ╢', 'ko': 'ь░и', 'zh': 'шМ╢', 'ar': '╪┤╪з┘К',
    'hi': 'рдЪрд╛рдп', 'bn': 'ржЪрж╛', 'te': 'р░Яр▒А', 'ta': 'родрпЗроирпАро░рпН', 'gu': 'ркЪрк╛'
  },
  'fruit': {
    'es': 'fruta', 'fr': 'fruit', 'de': 'frucht', 'it': 'frutta', 'pt': 'fruta',
    'ru': '╤Д╤А╤Г╨║╤В', 'ja': 'цЮЬчЙй', 'ko': 'ъ│╝ьЭ╝', 'zh': 'ц░┤цЮЬ', 'ar': '┘Б╪з┘Г┘З╪й',
    'hi': 'рдлрд▓', 'bn': 'ржлрж▓', 'te': 'р░кр░Вр░бр▒Б', 'ta': 'рокро┤роорпН', 'gu': 'рклрк│'
  },
  'apple': {
    'es': 'manzana', 'fr': 'pomme', 'de': 'apfel', 'it': 'mela', 'pt': 'ma├з├г',
    'ru': '╤П╨▒╨╗╨╛╨║╨╛', 'ja': 'уВКуВУуБФ', 'ko': 'ьВмъ│╝', 'zh': 'шЛ╣цЮЬ', 'ar': '╪к┘Б╪з╪н╪й',
    'hi': 'рд╕реЗрдм', 'bn': 'ржЖржкрзЗрж▓', 'te': 'р░Жр░кр░┐р░▓р▒Н', 'ta': 'роЖрокрпНрокро┐ро│рпН', 'gu': 'рк╕рклрк░ркЬрки'
  },
  'banana': {
    'es': 'pl├бtano', 'fr': 'banane', 'de': 'banane', 'it': 'banana', 'pt': 'banana',
    'ru': '╨▒╨░╨╜╨░╨╜', 'ja': 'уГРуГКуГК', 'ko': 'ы░ФыВШыВШ', 'zh': 'щжЩшХЙ', 'ar': '┘Е┘И╪▓',
    'hi': 'рдХреЗрд▓рд╛', 'bn': 'ржХрж▓рж╛', 'te': 'р░Ер░░р░Яр░┐р░кр░Вр░бр▒Б', 'ta': 'ро╡ро╛ро┤рпИрокрпНрокро┤роорпН', 'gu': 'ркХрлЗрк│рлБркВ'
  },
  // WEATHER & NATURE ЁЯМдя╕П
  'sun': {
    'es': 'sol', 'fr': 'soleil', 'de': 'sonne', 'it': 'sole', 'pt': 'sol',
    'ru': '╤Б╨╛╨╗╨╜╤Ж╨╡', 'ja': 'хдкщЩ╜', 'ko': 'эГЬьЦС', 'zh': 'хдкщШ│', 'ar': '╪┤┘Е╪│',
    'hi': 'рд╕реВрд░рдЬ', 'bn': 'рж╕рзВрж░рзНржп', 'te': 'р░╕р▒Вр░░р▒Нр░пр▒Бр░бр▒Б', 'ta': 'роЪрпВро░ро┐ропройрпН', 'gu': 'рк╕рлВрк░рлНркп'
  },
  'moon': {
    'es': 'luna', 'fr': 'lune', 'de': 'mond', 'it': 'luna', 'pt': 'lua',
    'ru': '╨╗╤Г╨╜╨░', 'ja': 'цЬИ', 'ko': 'ыЛм', 'zh': 'цЬИф║о', 'ar': '┘В┘Е╪▒',
    'hi': 'рдЪрд╛рдВрдж', 'bn': 'ржЪрж╛ржБржж', 'te': 'р░Ър░Вр░жр▒Нр░░р▒Бр░бр▒Б', 'ta': 'роЪроирпНродро┐ро░ройрпН', 'gu': 'ркЪркВркжрлНрк░'
  },
  'star': {
    'es': 'estrella', 'fr': '├йtoile', 'de': 'stern', 'it': 'stella', 'pt': 'estrela',
    'ru': '╨╖╨▓╨╡╨╖╨┤╨░', 'ja': 'цШЯ', 'ko': 'ы│Д', 'zh': 'цШЯцШЯ', 'ar': '┘Ж╪м┘Е╪й',
    'hi': 'рддрд╛рд░рд╛', 'bn': 'рждрж╛рж░рж╛', 'te': 'р░ир░Хр▒Нр░╖р░др▒Нр░░р░В', 'ta': 'роироЯрпНроЪродрпНродро┐ро░роорпН', 'gu': 'ркдрк╛рк░рлЛ'
  },
  'rain': {
    'es': 'lluvia', 'fr': 'pluie', 'de': 'regen', 'it': 'pioggia', 'pt': 'chuva',
    'ru': '╨┤╨╛╨╢╨┤╤М', 'ja': 'щЫи', 'ko': 'ы╣Д', 'zh': 'щЫи', 'ar': '┘Е╪╖╪▒',
    'hi': 'рдмрд╛рд░рд┐рд╢', 'bn': 'ржмрзГрж╖рзНржЯрж┐', 'te': 'р░╡р░░р▒Нр░╖р░В', 'ta': 'рооро┤рпИ', 'gu': 'рк╡рк░рк╕рк╛ркж'
  },
  'snow': {
    'es': 'nieve', 'fr': 'neige', 'de': 'schnee', 'it': 'neve', 'pt': 'neve',
    'ru': '╤Б╨╜╨╡╨│', 'ja': 'щЫк', 'ko': 'ыИИ', 'zh': 'щЫк', 'ar': '╪л┘Д╪м',
    'hi': 'рдмрд░реНрдл', 'bn': 'ржмрж░ржл', 'te': 'р░ор░Вр░Ър▒Б', 'ta': 'рокройро┐', 'gu': 'ркмрк░ркл'
  },
  'wind': {
    'es': 'viento', 'fr': 'vent', 'de': 'wind', 'it': 'vento', 'pt': 'vento',
    'ru': '╨▓╨╡╤В╨╡╤А', 'ja': 'щви', 'ko': 'ы░ФыЮМ', 'zh': 'щгО', 'ar': '╪▒┘К╪з╪н',
    'hi': 'рд╣рд╡рд╛', 'bn': 'ржмрж╛рждрж╛рж╕', 'te': 'р░Чр░╛р░▓р░┐', 'ta': 'роХро╛ро▒рпНро▒рпБ', 'gu': 'рккрк╡рки'
  },
  'fire': {
    'es': 'fuego', 'fr': 'feu', 'de': 'feuer', 'it': 'fuoco', 'pt': 'fogo',
    'ru': '╨╛╨│╨╛╨╜╤М', 'ja': 'чБл', 'ko': 'ы╢И', 'zh': 'чБл', 'ar': '┘Ж╪з╪▒',
    'hi': 'рдЖрдЧ', 'bn': 'ржЖржЧрзБржи', 'te': 'р░Ер░Чр▒Нр░ир░┐', 'ta': 'роирпЖро░рпБрокрпНрокрпБ', 'gu': 'ркЖркЧ'
  },
  'earth': {
    'es': 'tierra', 'fr': 'terre', 'de': 'erde', 'it': 'terra', 'pt': 'terra',
    'ru': '╨╖╨╡╨╝╨╗╤П', 'ja': 'хЬ░чРГ', 'ko': 'ьзАъ╡м', 'zh': 'хЬ░чРГ', 'ar': '╪г╪▒╪╢',
    'hi': 'рдкреГрдереНрд╡реА', 'bn': 'ржкрзГржерж┐ржмрзА', 'te': 'р░нр▒Вр░ор░┐', 'ta': 'рокрпВрооро┐', 'gu': 'рккрлГркерлНрк╡рлА'
  },
  'tree': {
    'es': '├бrbol', 'fr': 'arbre', 'de': 'baum', 'it': 'albero', 'pt': '├бrvore',
    'ru': '╨┤╨╡╤А╨╡╨▓╨╛', 'ja': 'цЬи', 'ko': 'ыВШым┤', 'zh': 'цаС', 'ar': '╪┤╪м╪▒╪й',
    'hi': 'рдкреЗрдбрд╝', 'bn': 'ржЧрж╛ржЫ', 'te': 'р░Ър▒Жр░Яр▒Нр░Яр▒Б', 'ta': 'рооро░роорпН', 'gu': 'рк╡рлГркХрлНрк╖'
  },
  'flower': {
    'es': 'flor', 'fr': 'fleur', 'de': 'blume', 'it': 'fiore', 'pt': 'flor',
    'ru': '╤Ж╨▓╨╡╤В╨╛╨║', 'ja': 'шК▒', 'ko': 'ъ╜Г', 'zh': 'шК▒', 'ar': '╪▓┘З╪▒╪й',
    'hi': 'рдлреВрд▓', 'bn': 'ржлрзБрж▓', 'te': 'р░кр▒Бр░╡р▒Нр░╡р▒Б', 'ta': 'рокрпВ', 'gu': 'рклрлВрк▓'
  },
  // CLOTHING ЁЯСХ
  'shirt': {
    'es': 'camisa', 'fr': 'chemise', 'de': 'hemd', 'it': 'camicia', 'pt': 'camisa',
    'ru': '╤А╤Г╨▒╨░╤И╨║╨░', 'ja': 'уВ╖уГгуГД', 'ko': 'ьЕФь╕а', 'zh': 'шбмшбл', 'ar': '┘В┘Е┘К╪╡',
    'hi': 'рдХрдореАрдЬрд╝', 'bn': 'рж╢рж╛рж░рзНржЯ', 'te': 'р░Ър▒Кр░Хр▒Нр░Хр░╛', 'ta': 'роЪроЯрпНроЯрпИ', 'gu': 'рк╢рк░рлНркЯ'
  },
  'pants': {
    'es': 'pantalones', 'fr': 'pantalon', 'de': 'hose', 'it': 'pantaloni', 'pt': 'cal├зas',
    'ru': '╨▒╤А╤О╨║╨╕', 'ja': 'уВ║уГЬуГ│', 'ko': 'ы░ФьзА', 'zh': 'шгдхнР', 'ar': '╪и┘Ж╪╖┘Д┘И┘Ж',
    'hi': 'рдкреИрдВрдЯ', 'bn': 'ржкрзНржпрж╛ржирзНржЯ', 'te': 'р░кр▒Нр░пр░╛р░Вр░Яр▒Н', 'ta': 'рокрпЗройрпНроЯрпН', 'gu': 'рккрлЗркирлНркЯ'
  },
  'shoes': {
    'es': 'zapatos', 'fr': 'chaussures', 'de': 'schuhe', 'it': 'scarpe', 'pt': 'sapatos',
    'ru': '╨╛╨▒╤Г╨▓╤М', 'ja': 'щЭ┤', 'ko': 'ьЛаы░Ь', 'zh': 'щЮЛхнР', 'ar': '╪г╪н╪░┘К╪й',
    'hi': 'рдЬреВрддреЗ', 'bn': 'ржЬрзБрждрж╛', 'te': 'р░Ър▒Жр░кр▒Нр░кр▒Бр░▓р▒Б', 'ta': 'роХро╛ро▓рогро┐', 'gu': 'ркЬрлВркдрк╛'
  },
  'hat': {
    'es': 'sombrero', 'fr': 'chapeau', 'de': 'hut', 'it': 'cappello', 'pt': 'chap├йu',
    'ru': '╤И╨╗╤П╨┐╨░', 'ja': 'х╕╜хнР', 'ko': 'ыкиьЮР', 'zh': 'х╕╜хнР', 'ar': '┘В╪и╪╣╪й',
    'hi': 'рдЯреЛрдкреА', 'bn': 'ржЯрзБржкрж┐', 'te': 'р░Яр▒Лр░кр▒А', 'ta': 'родрпКрокрпНрокро┐', 'gu': 'ркЯрлЛрккрлА'
  },
  // ACTIONS & VERBS ЁЯПГ
  'run': {
    'es': 'correr', 'fr': 'courir', 'de': 'laufen', 'it': 'correre', 'pt': 'correr',
    'ru': '╨▒╨╡╨│╨░╤В╤М', 'ja': 'ш╡░уВЛ', 'ko': 'ыЛмыжмыЛд', 'zh': 'ш╖С', 'ar': '┘К╪м╪▒┘К',
    'hi': 'рджреМрдбрд╝рдирд╛', 'bn': 'ржжрзМржбрж╝рж╛ржирзЛ', 'te': 'р░кр░░р▒Бр░Чр▒Жр░др▒Нр░др▒Б', 'ta': 'роУроЯрпБ', 'gu': 'ркжрлЛркбрк╡рлБркВ'
  },
  'walk': {
    'es': 'caminar', 'fr': 'marcher', 'de': 'gehen', 'it': 'camminare', 'pt': 'andar',
    'ru': '╨╕╨┤╤В╨╕', 'ja': 'цнйуБП', 'ko': 'ъ▒╖ыЛд', 'zh': 'ш╡░', 'ar': '┘К┘Е╪┤┘К',
    'hi': 'рдЪрд▓рдирд╛', 'bn': 'рж╣рж╛ржБржЯрж╛', 'te': 'р░ир░бр░╡р▒Б', 'ta': 'роироЯроХрпНроХ', 'gu': 'ркЪрк╛рк▓рк╡рлБркВ'
  },
  'eat': {
    'es': 'comer', 'fr': 'manger', 'de': 'essen', 'it': 'mangiare', 'pt': 'comer',
    'ru': '╨╡╤Б╤В╤М', 'ja': 'щгЯуБ╣уВЛ', 'ko': 'ыи╣ыЛд', 'zh': 'хРГ', 'ar': '┘К╪г┘Г┘Д',
    'hi': 'рдЦрд╛рдирд╛', 'bn': 'ржЦрж╛ржУржпрж╝рж╛', 'te': 'р░др░┐р░ир░бр░В', 'ta': 'роЪро╛рокрпНрокро┐роЯ', 'gu': 'ркЦрк╛рк╡рлБркВ'
  },
  'drink': {
    'es': 'beber', 'fr': 'boire', 'de': 'trinken', 'it': 'bere', 'pt': 'beber',
    'ru': '╨┐╨╕╤В╤М', 'ja': 'щг▓уВА', 'ko': 'ызИьЛЬыЛд', 'zh': 'хЦЭ', 'ar': '┘К╪┤╪▒╪и',
    'hi': 'рдкреАрдирд╛', 'bn': 'ржкрж╛ржи ржХрж░рж╛', 'te': 'р░др▒Нр░░р░╛р░Чр▒Б', 'ta': 'роХрпБроЯро┐', 'gu': 'рккрлАрк╡рлБркВ'
  },
  'sleep': {
    'es': 'dormir', 'fr': 'dormir', 'de': 'schlafen', 'it': 'dormire', 'pt': 'dormir',
    'ru': '╤Б╨┐╨░╤В╤М', 'ja': 'чЬауВЛ', 'ko': 'ьЮРыЛд', 'zh': 'чЭбшзЙ', 'ar': '┘К┘Ж╪з┘Е',
    'hi': 'рд╕реЛрдирд╛', 'bn': 'ржШрзБржорж╛ржирзЛ', 'te': 'р░ир░┐р░жр▒Нр░░р░кр▒Лр░╡р▒Б', 'ta': 'родрпВроЩрпНроХрпБ', 'gu': 'рк╕рлВрк╡рлБркВ'
  },
  'work': {
    'es': 'trabajar', 'fr': 'travailler', 'de': 'arbeiten', 'it': 'lavorare', 'pt': 'trabalhar',
    'ru': '╤А╨░╨▒╨╛╤В╨░╤В╤М', 'ja': 'хГНуБП', 'ko': 'ьЭ╝эХШыЛд', 'zh': 'х╖еф╜Ь', 'ar': '┘К╪╣┘Е┘Д',
    'hi': 'рдХрд╛рдо рдХрд░рдирд╛', 'bn': 'ржХрж╛ржЬ ржХрж░рж╛', 'te': 'р░кр░ир░┐ р░Ър▒Зр░пр▒Б', 'ta': 'ро╡рпЗро▓рпИ роЪрпЖропрпН', 'gu': 'ркХрк╛рко ркХрк░рк╡рлБркВ'
  },
  'play': {
    'es': 'jugar', 'fr': 'jouer', 'de': 'spielen', 'it': 'giocare', 'pt': 'jogar',
    'ru': '╨╕╨│╤А╨░╤В╤М', 'ja': 'щБКуБ╢', 'ko': 'ыЖАыЛд', 'zh': 'чОй', 'ar': '┘К┘Д╪╣╪и',
    'hi': 'рдЦреЗрд▓рдирд╛', 'bn': 'ржЦрзЗрж▓рж╛', 'te': 'р░Жр░Я', 'ta': 'ро╡ро┐ро│рпИропро╛роЯрпБ', 'gu': 'рк░ркорк╡рлБркВ'
  },
  'read': {
    'es': 'leer', 'fr': 'lire', 'de': 'lesen', 'it': 'leggere', 'pt': 'ler',
    'ru': '╤З╨╕╤В╨░╤В╤М', 'ja': 'шкнуВА', 'ko': 'ьЭ╜ыЛд', 'zh': 'шп╗', 'ar': '┘К┘В╪▒╪г',
    'hi': 'рдкрдврд╝рдирд╛', 'bn': 'ржкржбрж╝рж╛', 'te': 'р░Ър░жр░╡р▒Б', 'ta': 'рокроЯро┐', 'gu': 'рк╡рк╛ркВркЪрк╡рлБркВ'
  },
  'write': {
    'es': 'escribir', 'fr': '├йcrire', 'de': 'schreiben', 'it': 'scrivere', 'pt': 'escrever',
    'ru': '╨┐╨╕╤Б╨░╤В╤М', 'ja': 'цЫ╕уБП', 'ko': 'ьУ░ыЛд', 'zh': 'хЖЩ', 'ar': '┘К┘Г╪к╪и',
    'hi': 'рд▓рд┐рдЦрдирд╛', 'bn': 'рж▓рзЗржЦрж╛', 'te': 'р░╡р▒Нр░░р░╛р░пр▒Б', 'ta': 'роОро┤рпБродрпБ', 'gu': 'рк▓ркЦрк╡рлБркВ'
  },
  'speak': {
    'es': 'hablar', 'fr': 'parler', 'de': 'sprechen', 'it': 'parlare', 'pt': 'falar',
    'ru': '╨│╨╛╨▓╨╛╤А╨╕╤В╤М', 'ja': 'шй▒уБЩ', 'ko': 'ызРэХШыЛд', 'zh': 'шп┤шпЭ', 'ar': '┘К╪к┘Г┘Д┘Е',
    'hi': 'рдмреЛрд▓рдирд╛', 'bn': 'ржХржерж╛ ржмрж▓рж╛', 'te': 'р░ор░╛р░Яр▒Нр░▓р░╛р░бр▒Б', 'ta': 'рокрпЗроЪрпБ', 'gu': 'ркмрлЛрк▓рк╡рлБркВ'
  },
  'listen': {
    'es': 'escuchar', 'fr': '├йcouter', 'de': 'h├╢ren', 'it': 'ascoltare', 'pt': 'ouvir',
    'ru': '╤Б╨╗╤Г╤И╨░╤В╤М', 'ja': 'шБЮуБП', 'ko': 'ыУгыЛд', 'zh': 'хРм', 'ar': '┘К╪│╪к┘Е╪╣',
    'hi': 'рд╕реБрдирдирд╛', 'bn': 'рж╢рзЛржирж╛', 'te': 'р░╡р░┐р░ир░бр░В', 'ta': 'роХрпЗро│рпН', 'gu': 'рк╕рк╛ркВркнрк│рк╡рлБркВ'
  },
  'see': {
    'es': 'ver', 'fr': 'voir', 'de': 'sehen', 'it': 'vedere', 'pt': 'ver',
    'ru': '╨▓╨╕╨┤╨╡╤В╤М', 'ja': 'шжЛуВЛ', 'ko': 'ы│┤ыЛд', 'zh': 'чЬЛ', 'ar': '┘К╪▒┘Й',
    'hi': 'рджреЗрдЦрдирд╛', 'bn': 'ржжрзЗржЦрж╛', 'te': 'р░Ър▒Вр░бр▒Б', 'ta': 'рокро╛ро░рпН', 'gu': 'ркЬрлЛрк╡рлБркВ'
  },
  'come': {
    'es': 'venir', 'fr': 'venir', 'de': 'kommen', 'it': 'venire', 'pt': 'vir',
    'ru': '╨┐╤А╨╕╤Е╨╛╨┤╨╕╤В╤М', 'ja': 'цЭеуВЛ', 'ko': 'ьШдыЛд', 'zh': 'цЭе', 'ar': '┘К╪г╪к┘К',
    'hi': 'рдЖрдирд╛', 'bn': 'ржЖрж╕рж╛', 'te': 'р░░р░╛', 'ta': 'ро╡ро╛', 'gu': 'ркЖрк╡рк╡рлБркВ'
  },
  'go': {
    'es': 'ir', 'fr': 'aller', 'de': 'gehen', 'it': 'andare', 'pt': 'ir',
    'ru': '╨╕╨┤╤В╨╕', 'ja': 'шбМуБП', 'ko': 'ъ░АыЛд', 'zh': 'хО╗', 'ar': '┘К╪░┘З╪и',
    'hi': 'рдЬрд╛рдирд╛', 'bn': 'ржпрж╛ржУржпрж╝рж╛', 'te': 'р░╡р▒Жр░│р▒Нр░│р▒Б', 'ta': 'рокрпЛ', 'gu': 'ркЬрк╡рлБркВ'
  },
  // DIRECTIONS & POSITIONS ЁЯзн
  'left': {
    'es': 'izquierda', 'fr': 'gauche', 'de': 'links', 'it': 'sinistra', 'pt': 'esquerda',
    'ru': '╨╗╨╡╨▓╤Л╨╣', 'ja': 'х╖ж', 'ko': 'ьЩ╝ьк╜', 'zh': 'х╖ж', 'ar': '┘К╪│╪з╪▒',
    'hi': 'рдмрд╛рдПрдВ', 'bn': 'ржмрж╛ржо', 'te': 'р░Ор░бр░о', 'ta': 'роЗроЯродрпБ', 'gu': 'ркбрк╛ркмрлЗ'
  },
  'right': {
    'es': 'derecha', 'fr': 'droite', 'de': 'rechts', 'it': 'destra', 'pt': 'direita',
    'ru': '╨┐╤А╨░╨▓╤Л╨╣', 'ja': 'хП│', 'ko': 'ьШдые╕ьк╜', 'zh': 'хП│', 'ar': '┘К┘Е┘К┘Ж',
    'hi': 'рджрд╛рдПрдВ', 'bn': 'ржбрж╛ржи', 'te': 'р░Хр▒Бр░бр░┐', 'ta': 'ро╡ро▓родрпБ', 'gu': 'ркЬркоркгрлЗ'
  },
  'up': {
    'es': 'arriba', 'fr': 'haut', 'de': 'oben', 'it': 'su', 'pt': 'cima',
    'ru': '╨▓╨▓╨╡╤А╤Е', 'ja': 'ф╕К', 'ko': 'ьЬД', 'zh': 'ф╕К', 'ar': '┘Б┘И┘В',
    'hi': 'рдКрдкрд░', 'bn': 'ржЙржкрж░рзЗ', 'te': 'р░кр▒Ир░и', 'ta': 'роорпЗро▓рпЗ', 'gu': 'ркЙрккрк░'
  },
  'down': {
    'es': 'abajo', 'fr': 'bas', 'de': 'unten', 'it': 'gi├╣', 'pt': 'baixo',
    'ru': '╨▓╨╜╨╕╨╖', 'ja': 'ф╕Л', 'ko': 'ьХДыЮШ', 'zh': 'ф╕Л', 'ar': '╪к╪н╪к',
    'hi': 'рдиреАрдЪреЗ', 'bn': 'ржирж┐ржЪрзЗ', 'te': 'р░Хр▒Нр░░р░┐р░Вр░ж', 'ta': 'роХрпАро┤рпЗ', 'gu': 'ркирлАркЪрлЗ'
  },
  'here': {
    'es': 'aqu├н', 'fr': 'ici', 'de': 'hier', 'it': 'qui', 'pt': 'aqui',
    'ru': '╨╖╨┤╨╡╤Б╤М', 'ja': 'уБУуБУ', 'ko': 'ьЧмъ╕░', 'zh': 'ш┐ЩщЗМ', 'ar': '┘З┘Ж╪з',
    'hi': 'рдпрд╣рд╛рдБ', 'bn': 'ржПржЦрж╛ржирзЗ', 'te': 'р░Зр░Хр▒Нр░Хр░б', 'ta': 'роЗроЩрпНроХрпЗ', 'gu': 'ркЕрк╣рлАркВ'
  },
  'there': {
    'es': 'all├н', 'fr': 'l├а', 'de': 'dort', 'it': 'l├м', 'pt': 'l├б',
    'ru': '╤В╨░╨╝', 'ja': 'уБЭуБУ', 'ko': 'ъ▒░ъ╕░', 'zh': 'щВгщЗМ', 'ar': '┘З┘Ж╪з┘Г',
    'hi': 'рд╡рд╣рд╛рдБ', 'bn': 'рж╕рзЗржЦрж╛ржирзЗ', 'te': 'р░Ер░Хр▒Нр░Хр░б', 'ta': 'роЕроЩрпНроХрпЗ', 'gu': 'ркдрлНркпрк╛ркВ'
  },
  // TIME тП░
  'today': {
    'es': 'hoy', 'fr': 'aujourd\'hui', 'de': 'heute', 'it': 'oggi', 'pt': 'hoje',
    'ru': '╤Б╨╡╨│╨╛╨┤╨╜╤П', 'ja': 'ф╗КцЧе', 'ko': 'ьШдыКШ', 'zh': 'ф╗Кхдй', 'ar': '╪з┘Д┘К┘И┘Е',
    'hi': 'рдЖрдЬ', 'bn': 'ржЖржЬ', 'te': 'р░Ир░░р▒Лр░Ьр▒Б', 'ta': 'роЗройрпНро▒рпБ', 'gu': 'ркЖркЬрлЗ'
  },
  'tomorrow': {
    'es': 'ma├▒ana', 'fr': 'demain', 'de': 'morgen', 'it': 'domani', 'pt': 'amanh├г',
    'ru': '╨╖╨░╨▓╤В╤А╨░', 'ja': 'цШОцЧе', 'ko': 'ыВ┤ьЭ╝', 'zh': 'цШОхдй', 'ar': '╪║╪п╪з',
    'hi': 'рдХрд▓', 'bn': 'ржХрж╛рж▓', 'te': 'р░░р▒Зр░кр▒Б', 'ta': 'роиро╛ро│рпИ', 'gu': 'ркХрк╛рк▓рлЗ'
  },
  'yesterday': {
    'es': 'ayer', 'fr': 'hier', 'de': 'gestern', 'it': 'ieri', 'pt': 'ontem',
    'ru': '╨▓╤З╨╡╤А╨░', 'ja': 'цШицЧе', 'ko': 'ьЦ┤ьаЬ', 'zh': 'цШихдй', 'ar': '╪г┘Е╪│',
    'hi': 'рдХрд▓', 'bn': 'ржЧрждржХрж╛рж▓', 'te': 'р░ир░┐р░ир▒Нр░и', 'ta': 'роирпЗро▒рпНро▒рпБ', 'gu': 'ркЧркИркХрк╛рк▓рлЗ'
  },
  'morning': {
    'es': 'ma├▒ana', 'fr': 'matin', 'de': 'morgen', 'it': 'mattina', 'pt': 'manh├г',
    'ru': '╤Г╤В╤А╨╛', 'ja': 'цЬЭ', 'ko': 'ьХДь╣и', 'zh': 'цЧйф╕К', 'ar': '╪╡╪и╪з╪н',
    'hi': 'рд╕реБрдмрд╣', 'bn': 'рж╕ржХрж╛рж▓', 'te': 'р░Йр░жр░пр░В', 'ta': 'роХро╛ро▓рпИ', 'gu': 'рк╕рк╡рк╛рк░'
  },
  'night': {
    'es': 'noche', 'fr': 'nuit', 'de': 'nacht', 'it': 'notte', 'pt': 'noite',
    'ru': '╨╜╨╛╤З╤М', 'ja': 'хдЬ', 'ko': 'ы░д', 'zh': 'хдЬцЩЪ', 'ar': '┘Д┘К┘Д',
    'hi': 'рд░рд╛рдд', 'bn': 'рж░рж╛ржд', 'te': 'р░░р░╛р░др▒Нр░░р░┐', 'ta': 'роЗро░ро╡рпБ', 'gu': 'рк░рк╛ркд'
  },
  // ADJECTIVES ЁЯУП
  'big': {
    'es': 'grande', 'fr': 'grand', 'de': 'gro├Я', 'it': 'grande', 'pt': 'grande',
    'ru': '╨▒╨╛╨╗╤М╤И╨╛╨╣', 'ja': 'хдзуБНуБД', 'ko': 'эБ░', 'zh': 'хдз', 'ar': '┘Г╪и┘К╪▒',
    'hi': 'рдмрдбрд╝рд╛', 'bn': 'ржмржбрж╝', 'te': 'р░кр▒Жр░жр▒Нр░ж', 'ta': 'рокрпЖро░ро┐роп', 'gu': 'ркорлЛркЯрлБркВ'
  },
  'small': {
    'es': 'peque├▒o', 'fr': 'petit', 'de': 'klein', 'it': 'piccolo', 'pt': 'pequeno',
    'ru': '╨╝╨░╨╗╨╡╨╜╤М╨║╨╕╨╣', 'ja': 'х░ПуБХуБД', 'ko': 'ьЮСьЭА', 'zh': 'х░П', 'ar': '╪╡╪║┘К╪▒',
    'hi': 'рдЫреЛрдЯрд╛', 'bn': 'ржЫрзЛржЯ', 'te': 'р░Ър░┐р░ир▒Нр░и', 'ta': 'роЪро┐ро▒ро┐роп', 'gu': 'ркирк╛ркирлБркВ'
  },
  'hot': {
    'es': 'caliente', 'fr': 'chaud', 'de': 'hei├Я', 'it': 'caldo', 'pt': 'quente',
    'ru': '╨│╨╛╤А╤П╤З╨╕╨╣', 'ja': 'чЖ▒уБД', 'ko': 'ыЬиъ▒░ьЪ┤', 'zh': 'чГн', 'ar': '╪│╪з╪о┘Ж',
    'hi': 'рдЧрд░реНрдо', 'bn': 'ржЧрж░ржо', 'te': 'р░╡р▒Зр░бр░┐р░ор░┐', 'ta': 'роЪрпВроЯро╛рой', 'gu': 'ркЧрк░рко'
  },
  'cold': {
    'es': 'fr├нo', 'fr': 'froid', 'de': 'kalt', 'it': 'freddo', 'pt': 'frio',
    'ru': '╤Е╨╛╨╗╨╛╨┤╨╜╤Л╨╣', 'ja': 'хЖ╖уБЯуБД', 'ko': 'ь░иъ░АьЪ┤', 'zh': 'хЖ╖', 'ar': '╪и╪з╪▒╪п',
    'hi': 'рдардВрдбрд╛', 'bn': 'ржарж╛ржирзНржбрж╛', 'te': 'р░Ър░▓р▒Нр░▓р░ир░┐', 'ta': 'роХрпБро│ро┐ро░рпНроирпНрод', 'gu': 'ркаркВркбрлБркВ'
  },
  'good': {
    'es': 'bueno', 'fr': 'bon', 'de': 'gut', 'it': 'buono', 'pt': 'bom',
    'ru': '╤Е╨╛╤А╨╛╤И╨╕╨╣', 'ja': 'шЙпуБД', 'ko': 'ьвЛьЭА', 'zh': 'хе╜', 'ar': '╪м┘К╪п',
    'hi': 'рдЕрдЪреНрдЫрд╛', 'bn': 'ржнрж╛рж▓', 'te': 'р░ор░Вр░Ър░┐', 'ta': 'роиро▓рпНро▓', 'gu': 'рк╕рк╛рк░рлБркВ'
  },
  'bad': {
    'es': 'malo', 'fr': 'mauvais', 'de': 'schlecht', 'it': 'cattivo', 'pt': 'mau',
    'ru': '╨┐╨╗╨╛╤Е╨╛╨╣', 'ja': 'цВкуБД', 'ko': 'ыВШьБЬ', 'zh': 'хЭП', 'ar': '╪│┘К╪б',
    'hi': 'рдмреБрд░рд╛', 'bn': 'ржЦрж╛рж░рж╛ржк', 'te': 'р░Ър▒Жр░бр▒Б', 'ta': 'роХрпЖроЯрпНроЯ', 'gu': 'ркЦрк░рк╛ркм'
  },
  'new': {
    'es': 'nuevo', 'fr': 'nouveau', 'de': 'neu', 'it': 'nuovo', 'pt': 'novo',
    'ru': '╨╜╨╛╨▓╤Л╨╣', 'ja': 'цЦ░уБЧуБД', 'ko': 'ьГИыбЬьЪ┤', 'zh': 'цЦ░', 'ar': '╪м╪п┘К╪п',
    'hi': 'рдирдпрд╛', 'bn': 'ржирждрзБржи', 'te': 'р░Хр▒Кр░др▒Нр░д', 'ta': 'рокрпБродро┐роп', 'gu': 'ркирк╡рлБркВ'
  },
  'old': {
    'es': 'viejo', 'fr': 'vieux', 'de': 'alt', 'it': 'vecchio', 'pt': 'velho',
    'ru': '╤Б╤В╨░╤А╤Л╨╣', 'ja': 'хПдуБД', 'ko': 'ьШдыЮШыРЬ', 'zh': 'цЧз', 'ar': '┘В╪п┘К┘Е',
    'hi': 'рдкреБрд░рд╛рдирд╛', 'bn': 'ржкрзБрж░рж╛ржирзЛ', 'te': 'р░кр░╛р░д', 'ta': 'рокро┤рпИроп', 'gu': 'ркЬрлВркирлБркВ'
  },
  'fast': {
    'es': 'r├бpido', 'fr': 'rapide', 'de': 'schnell', 'it': 'veloce', 'pt': 'r├бpido',
    'ru': '╨▒╤Л╤Б╤В╤А╤Л╨╣', 'ja': 'щАЯуБД', 'ko': 'ы╣аые╕', 'zh': 'х┐л', 'ar': '╪│╪▒┘К╪╣',
    'hi': 'рддреЗрдЬрд╝', 'bn': 'ржжрзНрж░рзБржд', 'te': 'р░╡р▒Зр░Чр░В', 'ta': 'ро╡рпЗроХрооро╛рой', 'gu': 'ркЭркбрккрлА'
  },
  'slow': {
    'es': 'lento', 'fr': 'lent', 'de': 'langsam', 'it': 'lento', 'pt': 'lento',
    'ru': '╨╝╨╡╨┤╨╗╨╡╨╜╨╜╤Л╨╣', 'ja': 'щБЕуБД', 'ko': 'ыКРыж░', 'zh': 'цЕв', 'ar': '╪и╪╖┘К╪б',
    'hi': 'рдзреАрдорд╛', 'bn': 'ржзрзАрж░', 'te': 'р░ир▒Жр░ор▒Нр░ор░жр░┐', 'ta': 'роорпЖродрпБро╡ро╛рой', 'gu': 'ркзрлАркорлБркВ'
  }
};

// @route   POST /api/translation/detect
// @desc    Detect language of input text
// @access  Public
router.post('/detect', async (req, res) => {
  try {
    const { text } = req.body;

    if (!text) {
      return res.status(400).json({
        success: false,
        message: 'Text is required for language detection'
      });
    }

    // Simple language detection logic (you can integrate with Google Translate API later)
    let detectedLanguage = 'en'; // Default to English

    // Basic detection patterns
    const patterns = {
      'es': /[├▒├б├й├н├│├║├╝]/i,
      'fr': /[├а├в├д├й├и├к├л├п├о├┤├╢├╣├╗├╝├┐├з]/i,
      'de': /[├д├╢├╝├Я]/i,
      'it': /[├а├и├й├м├н├о├▓├│├╣]/i,
      'pt': /[├г├в├б├а├з├й├к├н├│├┤├╡├║]/i,
      'ru': /[╨░-╤П╤С]/i,
      'ar': /[\u0600-\u06FF]/,
      'hi': /[\u0900-\u097F]/,
      'zh': /[\u4e00-\u9fff]/,
      'ja': /[\u3040-\u309f\u30a0-\u30ff]/,
      'ko': /[\uac00-\ud7af]/
    };

    for (const [lang, pattern] of Object.entries(patterns)) {
      if (pattern.test(text)) {
        detectedLanguage = lang;
        break;
      }
    }

    // For now, keep the pattern-based detection as Google Translate library
    // doesn't provide language detection in this version

    res.json({
      success: true,
      data: {
        detectedLanguage,
        confidence: detectedLanguage === 'en' ? 0.6 : 0.9,
        text
      }
    });

  } catch (error) {
    console.error('Language detection error:', error);
    res.status(500).json({
      success: false,
      message: 'Error detecting language'
    });
  }
});

// @route   POST /api/translation/translate
// @desc    Translate text between languages
// @access  Public
router.post('/translate', rateLimit, async (req, res) => {
  try {
    console.log('ЁЯФД Translation request received:', req.body);
    const { text, from, to } = req.body;

    if (!text || !from || !to) {
      console.log('тЭМ Missing required fields:', { text: !!text, from: !!from, to: !!to });
      return res.status(400).json({
        success: false,
        message: 'Text, source language (from), and target language (to) are required'
      });
    }

    // Use comprehensive translation dictionary
    const lowerText = text.toLowerCase().trim();
    let translation = translationDictionary[lowerText]?.[to];

    // If no direct translation found, try to find partial matches
    if (!translation) {
      for (const [key, translations] of Object.entries(translationDictionary)) {
        if (lowerText.includes(key) || key.includes(lowerText)) {
          translation = translations[to];
          break;
        }
      }
    }

    // If still no translation, try Google Translate API
    if (!translation) {
      console.log(`ЁЯМР Using Google Translate for: ${text} (${from} тЖТ ${to})`);
      try {
        translation = await translate(text, { from, to });
        console.log(`тЬЕ Google Translate result: ${translation}`);
      } catch (error) {
        console.error('тЭМ Google Translate error:', error.message);
        // Try advanced pattern matching as final fallback
        translation = await tryAdvancedTranslation(text, from, to) || `[${text} in ${to.toUpperCase()}]`;
      }
    }

    console.log('тЬЕ Translation result:', { text, translation, from, to });

    res.json({
      success: true,
      data: {
        originalText: text,
        translatedText: translation,
        sourceLanguage: from,
        targetLanguage: to,
        confidence: translation.startsWith('[') ? 0.3 : 0.9
      }
    });

  } catch (error) {
    console.error('Translation error:', error);
    res.status(500).json({
      success: false,
      message: 'Error translating text'
    });
  }
});

// @route   POST /api/translation/word-info
// @desc    Get detailed information about a word
// @access  Public
router.post('/word-info', async (req, res) => {
  try {
    const { word, language } = req.body;

    if (!word) {
      return res.status(400).json({
        success: false,
        message: 'Word is required'
      });
    }

    // Mock word information (you can integrate with dictionary APIs later)
    const mockWordInfo = {
      word,
      language: language || 'en',
      phonetic: `/╦Иw╔Ь╦Рrd/`,
      definitions: [
        {
          partOfSpeech: 'noun',
          definition: 'A single distinct meaningful element of speech or writing',
          example: `"${word}" is a common word.`
        }
      ],
      synonyms: ['term', 'expression', 'phrase'],
      translations: {
        es: 'palabra',
        fr: 'mot',
        de: 'wort',
        it: 'parola'
      },
      difficulty: 'beginner',
      frequency: 'high'
    };

    res.json({
      success: true,
      data: mockWordInfo
    });

  } catch (error) {
    console.error('Word info error:', error);
    res.status(500).json({
      success: false,
      message: 'Error fetching word information'
    });
  }
});

// @route   GET /api/translation/languages
// @desc    Get list of supported languages
// @access  Public
router.get('/languages', (req, res) => {
  try {
    const languages = [
      { code: 'en', name: 'English', nativeName: 'English' },
      { code: 'es', name: 'Spanish', nativeName: 'Espa├▒ol' },
      { code: 'fr', name: 'French', nativeName: 'Fran├зais' },
      { code: 'de', name: 'German', nativeName: 'Deutsch' },
      { code: 'it', name: 'Italian', nativeName: 'Italiano' },
      { code: 'pt', name: 'Portuguese', nativeName: 'Portugu├кs' },
      { code: 'ru', name: 'Russian', nativeName: '╨а╤Г╤Б╤Б╨║╨╕╨╣' },
      { code: 'ja', name: 'Japanese', nativeName: 'цЧецЬмшкЮ' },
      { code: 'ko', name: 'Korean', nativeName: 'эХЬъ╡ньЦ┤' },
      { code: 'zh', name: 'Chinese', nativeName: 'ф╕нцЦЗ' },
      { code: 'ar', name: 'Arabic', nativeName: '╪з┘Д╪╣╪▒╪и┘К╪й' },
      { code: 'hi', name: 'Hindi', nativeName: 'рд╣рд┐рдиреНрджреА' },
      { code: 'bn', name: 'Bengali', nativeName: 'ржмрж╛ржВрж▓рж╛' },
      { code: 'te', name: 'Telugu', nativeName: 'р░др▒Жр░▓р▒Бр░Чр▒Б' },
      { code: 'ta', name: 'Tamil', nativeName: 'родрооро┐ро┤рпН' },
      { code: 'gu', name: 'Gujarati', nativeName: 'ркЧрлБркЬрк░рк╛ркдрлА' },
      { code: 'kn', name: 'Kannada', nativeName: 'р▓Хр▓ир│Нр▓ир▓б' },
      { code: 'ml', name: 'Malayalam', nativeName: 'р┤ор┤▓р┤пр┤╛р┤│р┤В' },
      { code: 'pa', name: 'Punjabi', nativeName: 'рикрй░риЬри╛римрйА' },
      { code: 'ur', name: 'Urdu', nativeName: '╪з╪▒╪п┘И' }
    ];

    res.json({
      success: true,
      data: languages
    });
  } catch (error) {
    console.error('Get languages error:', error);
    res.status(500).json({
      success: false,
      message: 'Error fetching supported languages'
    });
  }
});

// @route   POST /api/translation/batch
// @desc    Translate one word to multiple languages at once
// @access  Public
router.post('/batch', rateLimit, async (req, res) => {
  try {
    console.log('ЁЯФД Batch translation request received:', req.body);
    const { text, from, targetLanguages } = req.body;

    if (!text || !from || !targetLanguages || !Array.isArray(targetLanguages)) {
      return res.status(400).json({
        success: false,
        message: 'Text, source language (from), and targetLanguages array are required'
      });
    }

    const lowerText = text.toLowerCase().trim();
    const results = {};

    for (const targetLang of targetLanguages) {
      let translation = translationDictionary[lowerText]?.[targetLang];
      let confidence = 0.9;

      if (!translation) {
        // Try partial matching in dictionary
        for (const [key, translations] of Object.entries(translationDictionary)) {
          if (lowerText.includes(key) || key.includes(lowerText)) {
            translation = translations[targetLang];
            break;
          }
        }
      }

      if (!translation) {
        // Use Google Translate API for unknown words
        console.log(`ЁЯМР Google Translate: ${text} тЖТ ${targetLang}`);
        try {
          translation = await translate(text, { from, to: targetLang });
          confidence = 0.95; // High confidence for Google Translate
          console.log(`тЬЕ ${targetLang}: ${translation}`);
        } catch (error) {
          console.error(`тЭМ Google Translate error for ${targetLang}:`, error.message);
          // Final fallback
          translation = await tryAdvancedTranslation(text, from, targetLang) || `[${text} in ${targetLang.toUpperCase()}]`;
          confidence = translation.startsWith('[') ? 0.1 : 0.5;
        }
      }

      results[targetLang] = {
        text: translation,
        confidence: confidence,
        language: targetLang
      };
    }

    console.log('тЬЕ Batch translation results:', results);

    res.json({
      success: true,
      data: {
        originalText: text,
        sourceLanguage: from,
        translations: results
      }
    });

  } catch (error) {
    console.error('тЭМ Batch translation error:', error);
    res.status(500).json({
      success: false,
      message: 'Error translating text to multiple languages'
    });
  }
});

module.exports = router;
